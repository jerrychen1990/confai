#!/usr/bin/env python 
# encoding: utf-8 
"""
@author: chenhao
@file: analyse_data.py
@time: 2022/11/24 16:08
"""

import logging
import os

import click
import numpy as np
from tqdm import tqdm
from snippets import jload_lines, jdumps

from confai.schema import *

logger = logging.getLogger(__name__)


def test_dict(d):
    for cls in [TextSpanClassifyExample, TextGenExample, TextClassifyExample, TextPairClassifyExample]:
        try:
            rs = cls(**d)
            if rs.get_ground_truth() is not None:
                return rs
        except Exception as e:
            pass
    raise Exception("build union instance failed")


def get_len(example: TextExample):
    text = example.text

    if isinstance(example, TextGenExample) and example.get_ground_truth():
        text += example.get_ground_truth().text
    return len(text)


def analyse_file(file_path):
    print(f"analysing file: {file_path}")
    lines = jload_lines(file_path)
    example = test_dict(lines[0])
    example_cls = example.__class__
    examples = [example_cls(**d) for d in tqdm(lines)]
    lens = [get_len(e) for e in examples]
    max_len, min_len = max(lens), min(lens)
    rs = dict(example_num=len(examples), max_len=max_len, min_len=min_len)
    for pct in [99, 95, 90]:
        pct_len = np.percentile(lens, pct)
        rs[f"{pct}pct"] = pct_len
    return rs


@click.command()
@click.argument("path")
def analyse_data(path: str):
    """analyse data file"""
    rs = dict()
    if os.path.isdir(path):
        for file in os.listdir(path):
            if not os.path.isdir(file) and file.endswith(".jsonl"):
                eval_rs = analyse_file(os.path.join(path, file))
                rs[file] = eval_rs
    else:
        rs = analyse_file(path)
    click.echo(jdumps(rs))


if __name__ == '__main__':
    analyse_data()
